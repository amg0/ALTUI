{
    "database_id": 30,
    "label": "SP814",
    "manufacturer_name": "Everspring",
    "manufacturer_id": "0060",
    "device_ref": [
        "0001:0002"
    ],
    "version_min": 0,
    "version_max": 255.255,
    "decription": "Motion Detector",
    "overview": "<p>The Motion Detector is a Z-WaveTM enabled device which is fully compatible with any Z-WaveTM enabled network. Z-WaveTM enabled devices displaying the Z-WaveTM logo can also be used with it regardless of the manufacturer, and ours can also be used in other manufacturer\u2019s Z-WaveTM enabled networks. This Motion Detector can control our modules via controller setting. Inclusion of this Motion Detector on other manufacturer\u2019s Wireless Controller menu allows remote turn-on of connected modules when the detector is triggered.\u00a0<\/p>",
    "inclusion": "<p>Pressing link key 3 times within 1.5 second will enter inclusion mode.<\/p> <p>The Detector will stay \u201cawake\u201d for 10 minutes to allow time for setting and device status enquiring.<\/p>",
    "exclusion": "<p>Pressing link key 3 times within 1.5 second will enter exclusion mode.<\/p> <p>The Detector will stay \u201cawake\u201d for 10 minutes to allow time for setting and device status enquiring.\u00a0<\/p>",
    "wakeup": "<p>Not Provided<\/p>",
    "protocol_version": 2.064,
    "listening": false,
    "frequently_listening": false,
    "routing": true,
    "beaming": true,
    "library_type": {
        "id": 7,
        "name": "LIB_CONTROLLER_BRIDGE"
    },
    "basic_class": {
        "id": 4,
        "name": "BASIC_TYPE_ROUTING_SLAVE"
    },
    "generic_class": {
        "id": 4,
        "name": "GENERIC_TYPE_SENSOR_BINARY"
    },
    "specific_class": {
        "id": 4,
        "name": "SPECIFIC_TYPE_ROUTING_SENSOR_BINARY"
    },
    "endpoints": [
        {
            "id": 0,
            "basic_class": {
                "id": 4,
                "name": "BASIC_TYPE_ROUTING_SLAVE"
            },
            "generic_class": {
                "id": 32,
                "name": "GENERIC_TYPE_SENSOR_BINARY"
            },
            "specific_class": {
                "id": 1,
                "name": "SPECIFIC_TYPE_ROUTING_SENSOR_BINARY"
            },
            "commandclasses": [
                {
                    "id": "00",
                    "name": "NO_OPERATION",
                    "version": "1",
                    "nif": false,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "20",
                    "name": "BASIC",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "30",
                    "name": "SENSOR_BINARY",
                    "version": "1",
                    "nif": true,
                    "basic": true,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": [
                        {
                            "type": "sensor_binary",
                            "label": "Binary Sensor",
                            "config": []
                        }
                    ]
                },
                {
                    "id": "70",
                    "name": "CONFIGURATION",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "72",
                    "name": "MANUFACTURER_SPECIFIC",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "80",
                    "name": "BATTERY",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "84",
                    "name": "WAKE_UP",
                    "version": "2",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "85",
                    "name": "ASSOCIATION",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "86",
                    "name": "VERSION",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                }
            ]
        }
    ],
    "parameters": [
        {
            "id": 1,
            "label": "Basic Set Level",
            "description": "Basic Set Level",
            "overview": "<p>When Basic Set Command is sent where contains a value, the receiver will take it for consideration; for instance, if a lamp module is received the Basic Set command of which value is decisive as to how bright of dim level of lamp module shall be.<\/p> <p>Example: 0: OFF<\/p> <p>1-99: ON (Binary Switch Device)<\/p> <p>Dim Level (Multilevel Switch Device)<\/p> <p>Function:\u00a0Basic Set level<\/p> <p>Parameter: 1<\/p> <p>Number Size: 1<\/p> <p>Range: 0-99<\/p> <p>Default: 99\u00a0<\/p>",
            "size": 1,
            "bitmask": "00000000",
            "default": 99,
            "read_only": false,
            "write_only": false,
            "value_min": 0,
            "value_max": 99,
            "options": []
        },
        {
            "id": 2,
            "label": "Enable\/Disable Detecting",
            "description": "The Detecting function can be Disabled or Enabled.",
            "overview": "",
            "size": 1,
            "bitmask": "00000000",
            "default": 1,
            "read_only": false,
            "write_only": false,
            "value_min": 0,
            "value_max": 255,
            "options": [
                {
                    "value": 0,
                    "label": "Disabled"
                },
                {
                    "value": 1,
                    "label": "Enabled"
                }
            ]
        },
        {
            "id": 3,
            "label": "Sensitivity Level",
            "description": "1 Means lowest sensitivity and 10 means highest.",
            "overview": "",
            "size": 1,
            "bitmask": "00000000",
            "default": 6,
            "read_only": false,
            "write_only": false,
            "value_min": 1,
            "value_max": 10,
            "options": []
        },
        {
            "id": 4,
            "label": "Re-trigger Interval",
            "description": "Adjust the interval of being re-triggered after a trigger",
            "overview": "<p>The Configuration parameter that can be used to adjust the interval of being re-triggered after the detector has been triggered as Configuration Parameter #4. No response will be made during this interval if a movement is presented. The time interval can be set between 5 secs to 3600 secs.\u00a0<\/p>",
            "size": 2,
            "bitmask": "00000000",
            "default": 5,
            "read_only": false,
            "write_only": false,
            "value_min": 5,
            "value_max": 3600,
            "options": []
        },
        {
            "id": 5,
            "label": "Lux Level",
            "description": "Minimum Lux Level to provoke trigger",
            "overview": "<p>Sets minimum Lux Level of ambient illumination necessary for Motion Detector to trigger.<\/p> <p>The user can set a detecting percentage of lux level which determines when the light sensor will be activated. If percentage of lux level of ambient illumination falls below this percentage, and a person moves across or within\u00a0the protected area, the detector will emit Z-Wave ON Command (i.e. Basic Set Command (Value = Basic Set Level)) to controller and activate connected modules and lighting. Percentage can be set between 1% to 100%.<\/p>",
            "size": 1,
            "bitmask": "00000000",
            "default": 10,
            "read_only": false,
            "write_only": false,
            "value_min": 1,
            "value_max": 100,
            "options": []
        },
        {
            "id": 6,
            "label": "On-Off Duration",
            "description": "On-Off Duration",
            "overview": "<p>The function of on-off duration setting will be useful if the detector is connected with a module or lighting. The duration determines how long the module\/lighting should stay ON. For instance, Lamp Module turns off 100 secs after it has been turned on. This parameter can be configured with the value of 5 through 3600, where 5 means 5 second delay and 3600 means 3600 seconds of delay<\/p>",
            "size": 1,
            "bitmask": "00000000",
            "default": 5,
            "read_only": false,
            "write_only": false,
            "value_min": 5,
            "value_max": 255,
            "options": []
        }
    ],
    "associations": [
        {
            "id": 1,
            "label": "Reports",
            "max_nodes": 1,
            "controller": true,
            "description": "",
            "overview": ""
        },
        {
            "id": 2,
            "label": "Control",
            "max_nodes": 3,
            "controller": false,
            "description": "",
            "overview": ""
        }
    ]
}