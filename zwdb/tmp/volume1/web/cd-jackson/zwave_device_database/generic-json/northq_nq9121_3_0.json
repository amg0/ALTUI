{
    "database_id": 561,
    "label": "NQ-9121",
    "manufacturer_name": "NorthQ",
    "manufacturer_id": "0096",
    "device_ref": [
        "0010:0001"
    ],
    "version_min": 3,
    "version_max": 255.255,
    "decription": "Q-Gas 9121 (Firmware v3, 2016)",
    "overview": "<p>The Power Reader is a metering device capable of counting pulses from any electricity or gas meters. The device stores timestamped consumption in its internal memory every 15 minutes. Note: The Power Reader for electricity metering has different firmware than the Power Reader for gas metering. Please make sure you have the appropriate firmware on your device before you start integrating \/ installing it.\u00a0<\/p>",
    "inclusion": "<p>In order to include the Power\/Gas Reader in a Z-Wave network, the device must first have its network settings cleared. New devices fulfil this requirement be default. Power Readers with firmware version up to 3.24 and Gas Readers with firmware version up to 3.30 can have their network settings cleared by pressing 7 times on the button, however it is not recommended to do so because the Z-Wave controller will not be informed that the device has been reset. Power Readers with firmware version equal or larger than 3.29 and Gas Readers with firmware version equal or larger than 3.34 do not reset their network settings if the button has been pressed 7 times. To clear them, any Z-Wave controller must be placed in Exclusion mode first and the button on the device must be pressed 3 times.<\/p>",
    "exclusion": "<p>In order to exclude the Power\/Gas Reader from a Z-Wave network, place the controller in remove mode first and then press the button on the device 3 times.<\/p>",
    "wakeup": "<p>The Power Reader has two functioning modes:<\/p> <ul><li>Real-time mode: the device will be awake and keep the antenna on. It will stay in real-time a predefined number of seconds (900).<\/li> <li>Normal mode: the device will be in sleep and only wake up according to the interval defined by the WAKE UP SET command.<\/li> <\/ul>",
    "protocol_version": 3.028,
    "listening": false,
    "frequently_listening": false,
    "routing": true,
    "beaming": true,
    "library_type": {
        "id": 3,
        "name": "LIB_SLAVE_ENHANCED"
    },
    "basic_class": {
        "id": 4,
        "name": "BASIC_TYPE_ROUTING_SLAVE"
    },
    "generic_class": {
        "id": 4,
        "name": "GENERIC_TYPE_METER"
    },
    "specific_class": {
        "id": 4,
        "name": "SPECIFIC_TYPE_SIMPLE_METER"
    },
    "endpoints": [
        {
            "id": 0,
            "basic_class": {
                "id": 4,
                "name": "BASIC_TYPE_ROUTING_SLAVE"
            },
            "generic_class": {
                "id": 49,
                "name": "GENERIC_TYPE_METER"
            },
            "specific_class": {
                "id": 1,
                "name": "SPECIFIC_TYPE_SIMPLE_METER"
            },
            "commandclasses": [
                {
                    "id": "00",
                    "name": "NO_OPERATION",
                    "version": "1",
                    "nif": false,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "20",
                    "name": "BASIC",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "32",
                    "name": "METER",
                    "version": "2",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": [
                        {
                            "type": "meter_gas_cubic_meters",
                            "label": "Gas meter (cubic meters)",
                            "config": [
                                "type=G_Cubic_Meters"
                            ]
                        }
                    ]
                },
                {
                    "id": "3D",
                    "name": "METER_TBL_MONITOR",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "56",
                    "name": "CRC_16_ENCAP",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "70",
                    "name": "CONFIGURATION",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "72",
                    "name": "MANUFACTURER_SPECIFIC",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "7A",
                    "name": "FIRMWARE_UPDATE_MD",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "80",
                    "name": "BATTERY",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "84",
                    "name": "WAKE_UP",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "86",
                    "name": "VERSION",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": []
                },
                {
                    "id": "8B",
                    "name": "TIME_PARAMETERS",
                    "version": "1",
                    "nif": true,
                    "basic": false,
                    "secure": false,
                    "nonsecure": true,
                    "config": "",
                    "channels": [
                        {
                            "type": "time_offset",
                            "label": "Clock Time Offset",
                            "config": []
                        }
                    ]
                }
            ]
        }
    ],
    "parameters": [
        {
            "id": 1,
            "label": "Pulse factor",
            "description": "Impulse or Rotation factor (see NorthQ docs for Gas meters)",
            "overview": "<p>Register 1 - Pulse factor (4 byte register) - In this register the controlling node must set the meter's impulse or rotation factor x 10.<\/p> <p>Example: For a gas meter read using the silver spot on one of the digits, the value written in this register is calculated with the following formula: Pulse factor = 10^?, where X is the index of the digit that has the silver spot.<\/p> <p>For a gas meter read through magnetic contact, the impulse factor is usually expressed as 1 imp = 0.01 m3, which correlates to 100 impulses for 1 m3. The value written in this register will therefore be 1000 (100*10).<\/p>",
            "size": 4,
            "bitmask": "00000000",
            "default": 1000,
            "read_only": false,
            "write_only": false,
            "value_min": 0,
            "value_max": 1000000,
            "options": []
        },
        {
            "id": 2,
            "label": "Sensor type",
            "description": "Defines the type of sensor",
            "overview": "<p>Register 2 - sensor type (1 byte register) - In this register, the controlling node has to set the meter type on which the Power Reader is placed.<\/p> <p>For gas firmware: set 0x01 to this register for magnetic contact meters, or 0x02 for silver spot meters.<\/p>",
            "size": 1,
            "bitmask": "00000000",
            "default": 2,
            "read_only": false,
            "write_only": false,
            "value_min": 1,
            "value_max": 2,
            "options": [
                {
                    "value": 1,
                    "label": "magnetic contact"
                },
                {
                    "value": 2,
                    "label": "silver spot meter"
                }
            ]
        },
        {
            "id": 9,
            "label": "Pulse count",
            "description": "This register holds the total number of pulses.",
            "overview": "<p>Register 9 - pulse count (4 byte register) - This register holds the total number of pulses. Use this register to set the total meter consumption. In order for the Power\/Gas Reader to report the proper total meter consumption, the value for this registered has to be initialized with meter value * impulse factor.<\/p> <p>Ex: For a mechanical meter with a rotation factor of 150 and the total meter consumption 100.3, the value written in this register must be: 15045 (150 x 100.3). The total meter consumption written on the meter can be a user input variable at installation.<\/p>",
            "size": 4,
            "bitmask": "00000000",
            "default": 0,
            "read_only": false,
            "write_only": false,
            "value_min": 0,
            "value_max": 2147483647,
            "options": []
        },
        {
            "id": 10,
            "label": "Keep alive period",
            "description": "How many ticks before going back to sleep in normal wakeup mode.",
            "overview": "<p>Register 10 - keep alive period (2 byte register) - At every wake up notification, the Power Reader stays alive for 3 seconds. If the controlling node can't guarantee a response for the Power Reader within 3 seconds, then this register should be set to the number of seconds that it will take the controlling node to send a response \/ request to the wake up notification.<\/p>",
            "size": 2,
            "bitmask": "00000000",
            "default": 5,
            "read_only": false,
            "write_only": false,
            "value_min": 0,
            "value_max": 32767,
            "options": []
        },
        {
            "id": 11,
            "label": "Real-time mode",
            "description": "Set this to enter real-time mode from remote.",
            "overview": "<p>Register 11 - real-time register (2 bytes) - This register notifies the controlling mode when the real-time mode has started and when it ended. The configuration report contains the number of seconds * 20 left until the real-time mode is over. A configuration report with value 0 notifies the controlling node that the Power Reader is going to normal mode.<\/p> <p>NOTE: The wake up no more information has no effect in real-time mode. In order to tell the Power Reader to go to sleep from real-time mode, the controlling node has to set this register to value 0.<\/p>",
            "size": 2,
            "bitmask": "00000000",
            "default": 0,
            "read_only": true,
            "write_only": false,
            "value_min": 0,
            "value_max": 32767,
            "options": []
        },
        {
            "id": 12,
            "label": "Serial number",
            "description": "Read-only serial number in decimal",
            "overview": "<p>Register 12 - serial number (4 bytes) - This register contains the serial number of the Power Reader.\u00a0<\/p> <p>NOTE: The serial numbers written on the Power Reader are in HEX, not decimal.<\/p>",
            "size": 4,
            "bitmask": "00000000",
            "default": 0,
            "read_only": true,
            "write_only": false,
            "value_min": 0,
            "value_max": 65535,
            "options": []
        },
        {
            "id": 15,
            "label": "Calibration status",
            "description": "Aplies to devices with firmware version 3.30 or higher",
            "overview": "<p>Register 15 - calibration status (4 byte) - A configuration report with this register will inform the controlling node of its current calibration status on the meter.<\/p> <p><strong>Only applies to gas readers with firmware version 3.30 or higher configured for SILVER SPOT!<\/strong><\/p> <p>Setting the value 0 on this register will restart the calibration process will restart the calibration process that occurs normally at power-up. The calibration process lasts approx. 2 minutes. Interrogating this register will return the current calibration percentage, from 0 to 100, value 100 indicating that the calibration has ended.<\/p>",
            "size": 4,
            "bitmask": "00000000",
            "default": 0,
            "read_only": false,
            "write_only": false,
            "value_min": 0,
            "value_max": 65535,
            "options": []
        }
    ],
    "associations": []
}